{"version":3,"names":[],"mappings":"","sources":["resetPassword/resetPassword-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { LoggerService } from \"../common/services/logger-service\";\r\nimport { ProxyService } from \"../common/services/proxy-service\";\r\nimport { ContextService } from \"../common/services/context-service\";\r\nimport \"../rxjs-operators\"\r\n\r\n@Injectable()\r\nexport class ResetPasswordService {\r\n    constructor(private loggerService: LoggerService, private proxyService: ProxyService,\r\n        private contextService: ContextService, private http: Http) { }\r\n\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n\r\n        this.loggerService.logMessage(errMsg);\r\n\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n    public resetPassword(email: string): Observable<any> {\r\n        let observable$ = this.proxyService.PostAnonymous(\"account/sendResetPassword \", { Email: email });\r\n        observable$.subscribe(\r\n            data => {\r\n                if (data.success) {\r\n                }\r\n            });\r\n        return observable$;\r\n\r\n    }\r\n\r\n}"],"file":"resetPassword/resetPassword-service.ts","sourceRoot":"/source/"}